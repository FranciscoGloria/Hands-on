package rl;

import jade.core.behaviours.OneShotBehaviour;
import jade.core.Agent;

public class RegresionLineal extends Agent {
    private double [] datosx = {23,26,30,34,43,48,52,57,58};
    private double [] datosy = {651,762,856,1063,1190,1298,1421,1440,1518};
    private double [] datosx2;
    private double [] datosxy;
    private double sumx = 0, sumy = 0, sumx2 = 0, sumxy = 0, beta0 = 0, beta1 = 0, paso2_1 = 0, paso2_2 = 0, error = 0, a = 0.003, beta0n = 0, beta1n = 0;
    private int n = 9;

    protected void setup() {
        System.out.println("Regresion Lineal Simple");
        addBehaviour(new MyOneShotBehaviour());
    }

    private class MyOneShotBehaviour extends OneShotBehaviour{

        public void action(){
            System.out.println("Agente Iniciado");
            //Instance
            datosx2 = new double[n];
            datosxy = new double[n];
            //Output
            System.out.println(" X | Y ");
            for (int i=0; i<n; i++){
                System.out.println(datosx[i] + " | "+ datosy[i]);
            }
            //Calculando Datos//
            for(int i=0; i<n; i++){
                sumx = sumx + datosx[i];
            }
            System.out.println("\nLa suma de los datos X es: "+sumx);

            for (int i=0; i<n; i++){
                sumy = sumy + datosy[i];
            }
            System.out.println("La suma de los datos Y es: "+sumy);

            for(int i=0; i<n; i++){
                datosx2[i] = datosx[i] * datosx[i];
                datosxy[i] = datosx[i] * datosy[i];
            }
            for (int i=0; i<n; i++){
                sumx2 = sumx2 + datosx2[i];
            }
            System.out.println("X^2 ="+sumx2);
            for (int i=0; i<n; i++){
                sumxy = sumxy + datosxy[i];
            }
            System.out.println("X*Y ="+sumxy);

            beta0 = ((sumy)*(sumx2)-(sumx)*(sumxy))/(n*(sumx2)-(sumx)*(sumx));
            System.out.println("Beta_0 = "+beta0);

            beta1 = (9*(sumxy)-(sumx)*(sumy))/(n*(sumx2)-(sumx)*(sumx));
            System.out.println("Beta_1 = "+beta1);
            //Step2_1
            for (int i = 0; i<n; i++){
                paso2_1 += (datosy[i]-(beta0+(beta1*datosx[i])));
            }
            paso2_1 = (-0.22 * paso2_1);
            System.out.println("Paso 2.1 es: " + paso2_1);
            //Setep2_2
            for (int i = 0; i<n; i++){
                paso2_2 += (datosx[0]*(datosy[i]-(beta0+(beta1*datosx[i]))));
            }
            paso2_2 = (-0.22 * paso2_2);
            System.out.println("Paso 2.2 es: " + paso2_2);
            //Error
            for (int i = 0; i<n; i++){
                error += Math.pow(datosy[i]-(beta0+(beta1*datosx[i])),2);
            }
            error = (0.11 * error);
            System.out.println("El Error es: " + error);
            //Beta New 0
            beta0n = beta0 - a*(0/-1);
            System.out.println("La Nueva Beta0 es: "+beta0n);
            //Beta New 1
            for (int i=0; i<n; i++){
                beta1n = beta1 - a*(0/(-23*datosx[i]));
            }
            System.out.println("La Nueva Beta1 es: "+beta1n);
        }

        public void step2_1(){
            for (int i = 0; i<n; i++){
                paso2_1 += (datosy[i]-(beta0+(beta1*datosx[i])));
            }
            paso2_1 = (-0.22 * paso2_1);
            System.out.println("Paso 2.1 es: " + paso2_1);
        }
        public int onEnd(){
            System.out.println("Agente Eliminado");
            myAgent.doDelete();
            return super.onEnd();
        }
    }
}
